plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.1.2'
	id 'com.diffplug.spotless' version "6.19.0"
	id 'com.bmuschko.docker-spring-boot-application' version '9.3.1'
}

group = 'dakotaio'
version = '0.0.10'
sourceCompatibility = '17'

repositories {
	mavenCentral()
	gradlePluginPortal()
}

ext {
	set('springCloudVersion', "2021.0.7")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'

	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'org.postgresql:r2dbc-postgresql:1.0.2.RELEASE'

	//LOGS
//	implementation 'org.slf4j:slf4j-api:1.7.30'
//	implementation 'ch.qos.logback:logback-core:1.2.9'
//	testImplementation 'ch.qos.logback:logback-classic:1.2.9'

	//JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-orgjson:0.11.2'

	//MIGRATION
	implementation 'org.liquibase:liquibase-core'

	//JAVA CALCULATOR
	implementation 'com.fathzer:javaluator:3.0.3'

	//MONITORING
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	//CLOUD
	implementation 'com.playtika.reactivefeign:feign-reactor-spring-cloud-starter:4.0.0'

	//UTILS
	implementation 'org.apache.commons:commons-lang3:3.12.0'

	//TESTS
	testImplementation 'junit:junit:4.13.2'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
}

dependencyManagement {
	imports {
		"org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
	format 'misc', {
		target '*.gradle', '*.md', '.gitignore'

		trimTrailingWhitespace()
		indentWithTabs()
		endWithNewline()
	}
	java {
		palantirJavaFormat("2.32.0")
		importOrder()
		removeUnusedImports()
		trimTrailingWhitespace()
		endWithNewline()
		formatAnnotations()
	}
}

docker {
	springBootApplication {
		baseImage = 'openjdk:17-jdk-slim'
	}
}
