plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.8'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'com.diffplug.spotless' version "6.19.0"
	id 'com.bmuschko.docker-spring-boot-application' version '9.3.1'
}

group = 'dakotaio'
version = '0.0.8'
sourceCompatibility = '17'

repositories {
	mavenCentral()
	gradlePluginPortal()
}

ext {
	set('springCloudVersion', "2021.0.7")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	//LOGS
	implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
	implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.2.9'
	testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.9'

	//JWT
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-orgjson', version: '0.11.2'

	//MIGRATION
	implementation 'org.liquibase:liquibase-core'

	//JAVA CALCULATOR
	implementation group: 'com.fathzer', name: 'javaluator', version: '3.0.3'

	//MONITORING
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	//CLOUD
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	//UTILS
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

	//TESTS
	testImplementation group: 'junit', name: 'junit', version: '4.13.2'
	testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '5.3.1'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
	format 'misc', {
		target '*.gradle', '*.md', '.gitignore'

		trimTrailingWhitespace()
		indentWithTabs()
		endWithNewline()
	}
	java {
		palantirJavaFormat("2.32.0")
		importOrder()
		removeUnusedImports()
		trimTrailingWhitespace()
		endWithNewline()
		formatAnnotations()
	}
}

docker {
	springBootApplication {
		baseImage = 'openjdk:17-jdk-slim'
	}
}
